$date
    Mar 20, 2018  00:29:16
$end
$version
    TOOL:	ncsim	10.20-s114
$end
$timescale
    10 ps
$end

$scope module asu_test $end
$var parameter 32 !    pattern_num  $end
$var wire      8 "    out [7:0] $end
$var wire      1 #    carry  $end
$var reg       8 $    x [7:0] $end
$var reg       8 %    y [7:0] $end
$var reg       1 &    mode  $end
$var reg       1 '    clk  $end
$var reg       1 (    stop  $end
$var integer  32 )    i  $end
$var integer  32 *    num  $end
$var integer  32 +    error  $end
$var reg       9 ,    ans_out [8:0] $end
$var reg       9 -    mux_out [8:0] $end

$scope module t $end
$var wire      8 .    x [7:0] $end
$var wire      1 /    y [7] $end
$var wire      1 0    y [6] $end
$var wire      1 1    y [5] $end
$var wire      1 2    y [4] $end
$var wire      1 3    y [3] $end
$var wire      1 4    y [2] $end
$var wire      1 5    y [1] $end
$var wire      1 6    y [0] $end
$var wire      1 7    mode  $end
$var wire      1 #    carry  $end
$var wire      8 "    out [7:0] $end
$var wire      8 8    output_a [7:0] $end
$var wire      8 9    output_b [7:0] $end

$scope module a $end
$var wire      8 .    x [7:0] $end
$var wire      1 /    y [7] $end
$var wire      1 0    y [6] $end
$var wire      1 1    y [5] $end
$var wire      1 2    y [4] $end
$var wire      1 3    y [3] $end
$var wire      1 4    y [2] $end
$var wire      1 5    y [1] $end
$var wire      1 6    y [0] $end
$var wire      1 #    carry  $end
$var wire      8 8    out [7:0] $end
$upscope $end


$scope module b $end
$var wire      8 .    in [7:0] $end
$var wire      1 4    shift [2] $end
$var wire      1 5    shift [1] $end
$var wire      1 6    shift [0] $end
$var wire      8 9    out [7:0] $end
$var wire      8 :    x1 [7:0] $end
$var wire      8 ;    x2 [7:0] $end
$var reg       1 <    zero  $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b1010 !
b10101010 "
0#
b10101010 $
b0 %
0&
1'
0(
b0 )
b10 *
b0 +
bx ,
bx -
b10101010 .
0/
00
01
02
03
04
05
06
07
b10101010 8
b10101010 9
b10101010 :
b10101010 ;
0<
$end
#1000
0'
#2000
1'
b1 %
b100 *
16
b10101011 8
b1010100 :
b1010100 ;
b1010100 9
b1010100 "
b1 )
b10101010 -
b10101010 ,
#3000
0'
#4000
1'
b10 %
b110 *
15
06
b10101010 :
b10101100 8
b1010000 ;
b1010000 9
b10101000 ;
b10101000 9
b1010000 "
b10101000 "
b10 )
b1010100 -
b1010100 ,
#5000
0'
#6000
1'
b11 %
b1000 *
16
b10101101 8
b1010100 :
b1010000 ;
b1010000 9
b1010000 "
b11 )
b10101000 -
b10101000 ,
#7000
0'
#8000
1'
1&
b1110000 $
b1111 %
b1010 *
13
14
b1110000 .
17
b10101101 "
b11100000 :
b0 9
b1111111 8
b1111111 "
b10000000 ;
b100 )
b1010000 -
b1010000 ,
#9000
0'
#10000
1'
b11001001 $
b11110 %
b1100 *
12
06
b11001001 .
b11001001 :
b11100111 8
b11100111 "
b100100 ;
b1000000 9
b101 )
b1111111 -
b1111111 ,
#11000
0'
#12000
1'
b1011011 $
b1101010 %
b1110 *
10
11
02
04
b1011011 .
b1011011 :
b100100 9
b11000101 8
b11000101 "
b1101100 ;
b1101100 9
b110 )
b11100111 -
b11100111 ,
#13000
0'
#14000
1'
b11101 $
b11010001 %
b10000 *
1/
01
12
03
05
16
b11101 .
b111010 :
b1011011 ;
b11101110 8
b11101110 "
b1011011 9
b111010 ;
b111010 9
b111 )
b11000101 -
b11000101 ,
#15000
0'
#16000
1'
b11101001 $
b11111000 %
b10010 *
11
13
06
b11101001 .
b11101001 :
1#
b11100001 8
b11100001 "
b11101001 ;
b11101001 9
b1000 )
b11101110 -
b11101110 ,
#17000
0'
#18000
1'
b11110000 $
b11011 %
b10100 *
0/
00
01
15
16
b11110000 .
b11100000 :
b10100100 ;
b1011 8
b1011 "
b10100100 9
b10000000 ;
b10000000 9
b1001 )
b111100001 -
b111100001 ,
#19000
0'
#20000
1'
b1010 )
b100001011 -
b100001011 ,
#21000
0'
#22000
1'
b1011 )
1(
bx ,
